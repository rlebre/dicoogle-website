import type { NextPage } from 'next';
import Head from 'next/head';
import Footer from '../components/footer/Footer';
import HomeCard from '../components/home-card/HomeCard';

import Navbar from '../components/navbar/Navbar';
import GridSection from '../components/grid-section/GridSection';
import styles from '../styles/Home.module.scss';
import FlatSection from '../components/flat-section/FlatSection';

function classNames(...classes: string[]) {
  return classes.filter(Boolean).join(' ');
}

const applications = [
  {
    imageUrl: '/images/applications/research_icon.png',
    imageHeight: '100',
    imageWidth: '100',
    title: 'Research',
    description: [
      "With a big list of scientific articles published related to it, Dicoogle's place as a research aid tool is well-established. After the development of Dicoogle by UA.PT Bioinformatics research group, this resource was successfully used as the basis for several other research projects.",
    ],
  },
  {
    imageUrl: '/images/applications/teaching_icon.png',
    imageHeight: '100',
    imageWidth: '100',
    title: 'Teaching',
    description: [
      'Dicoogle is the PACS platform of choice to teach Medical Imaging and Computer Science students in University of Aveiro. These MSc students are encouraged to develop small projects that are based on this PACS archive, providing knowledge to community and improvements to Dicoogle.',
    ],
  },
  {
    imageUrl: '/images/applications/professional_icon.png',
    imageHeight: '100',
    imageWidth: '100',
    title: 'Professional',
    description: [
      'Dicoogle is used as the core framework in some commercially available platforms in medical imaging. A good example of such use is BMD Software.',
    ],
  },
];

const features = [
  {
    imageUrl: '/images/applications/teaching_icon.png',
    imageHeight: '20',
    imageWidth: '20',
    title: 'Expansible',
    description: ['Plugin based architecture', 'SDK ready to boost new features development'],
  },
  {
    imageUrl: '/images/applications/professional_icon.png',
    imageHeight: '20',
    imageWidth: '20',
    title: 'Professional',
    description: [
      'Tested with over 25 millions of indexed DICOM objects',
      'Simple installation and deployment',
      'Optimized for big data paradigms',
    ],
  },
  {
    imageUrl: '/images/features/expand.svg',
    imageHeight: '20',
    imageWidth: '20',
    title: 'Research',
    description: ['Storage', 'Query/Retrieve', 'DICOMWeb', 'Extensible with additional plugins and modules'],
  },
  {
    imageUrl: '/images/applications/teaching_icon.png',
    imageHeight: '20',
    imageWidth: '20',
    title: 'Teaching',
    description: [
      'Enable DICOM study retrieval and knowledge extraction with pluggable query providers',
      'Support for complex query/retrieval solutions, such as free text, range based queries over meta-data, and query-by-example.',
    ],
  },
  {
    imageUrl: '/images/applications/professional_icon.png',
    imageHeight: '20',
    imageWidth: '20',
    title: 'Professional',
    description: [
      'Web Application compatible with modern browsers',
      'Web Services with an open API for programmatic control',
    ],
  },
  {
    imageUrl: '/images/applications/professional_icon.png',
    imageHeight: '20',
    imageWidth: '20',
    title: 'Professional',
    description: [
      'Platform Independent (Windows, Linux, Mac)',
      'Free and proprietary plugins are available',
      'Licence: GPL v3',
    ],
  },
];

const Home: NextPage = () => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Navbar />

      <div className={styles.container}>
        <main className={styles.main}>
          <FlatSection title='About' />

          <GridSection title='Applications'>
            {applications.map((application) => (
              <HomeCard key={application.title} {...application}></HomeCard>
            ))}
          </GridSection>

          <GridSection title='features'>
            {features.map((application) => (
              <HomeCard key={application.title} {...application}></HomeCard>
            ))}
          </GridSection>
        </main>
      </div>

      <Footer />
    </div>
  );
};

export default Home;
